{"version":3,"file":"static/js/93.44add21e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;","\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport css from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/selectors';\n\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === name)) {\n      toast.error(`${name} is already in contacts.`)\n    } else {\n      dispatch(addContact({id: toast(), name, number }));\n    }\n    \n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => {\n    if (e.target.type === 'text') {\n      setName(e.target.value);\n    }\n  };\n  const handleChangeNumber = e => {\n    if (e.target.type === 'tel') {\n      setNumber(e.target.value);\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"enter a name\"\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          placeholder=\"enter a number\"\n        />\n      </label>\n      <button className={css.btn} type=\"submit\" onSubmit={handleSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n\nexport default ContactForm","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { deleteContact } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(state => state.filter.filter).toLowerCase();\n\n  const onFilterChange = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n  const onDeleteContact = e => {\n    dispatch(deleteContact(e.target.id));\n  };\n\n  return (\n    <ul className={css.list}>\n      {onFilterChange().map(({ id, name, number }) => (\n        <li className={css.item} key={id}>\n          <p className={css.info}>\n            <span>{name} : \n            </span>{number}\n          </p>\n          <button\n            className={css.btn}\n            type=\"button\"\n            id={id}\n            onClick={onDeleteContact}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      <input\n        placeholder='Enter name for Search'\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter\n","\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport  ContactForm  from 'components/ContactForm/ContactForm';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport  Filter  from 'components/Filter/Filter';\nimport { fetchContacts } from '../redux/operations';\nimport { selectIsLoading, selectError, selectContacts } from '../redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter />\n      )}\n      {isLoading && !error && (\n        <p>Please wait...</p>\n      )}\n      {contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleSubmit","e","preventDefault","some","contact","toast","addContact","id","reset","className","css","onSubmit","type","value","onChange","target","placeholder","filterValue","filter","toLowerCase","onDeleteContact","deleteContact","includes","map","onClick","setFilter","useEffect","fetchContacts","length"],"sourceRoot":""}